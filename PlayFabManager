using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using PlayFab;
using TMPro;
using PlayFab.ClientModels;


public class PlayFabManager : MonoBehaviour
{
    public static PlayFabManager pFM;

    [Header("Pannel")]
    public GameObject loginPannel;
    public GameObject registerPannel;
    public GameObject playPannel;

    [Header("InputFields")]
    public TMP_InputField registerEmailIF;
    public TMP_InputField registerUsernameIF;
    public TMP_InputField registerPasswordIF;
    public TMP_InputField loginUsernameIF;
    public TMP_InputField loginPasswordIF;

    [Header("Button")]
    public GameObject registerButton; // good
    public GameObject registerCreateButton;
    public GameObject registerReturnButton; // good
    public GameObject loginButton;
    public GameObject loginQuitButton; // good

    public void OnEnable()
    {
        if (PlayFabManager.pFM == null)
        {
            pFM = this;
        }
        else
        {
            if (PlayFabManager.pFM != null)
            {
                Destroy(this.gameObject);
            }
        }
        DontDestroyOnLoad(this.gameObject);
    }
    public void Start()
    {

        //Note: Setting title Id here can be skipped if you have set the value in Editor Extensions already.
        if (string.IsNullOrEmpty(PlayFabSettings.TitleId))
        {
            PlayFabSettings.TitleId = "6C5D8"; // Please change this value to your own titleId from PlayFab Game Manager
        }

    }
    
    void Update()
    {

    }

    // Going from login to register pannel
    public void OnClickRegisterButton()
    {

        loginPannel.SetActive(false);
        registerPannel.SetActive(true);

    }

    // Going from register to login pannel
    public void OnClickReturnButton()
    {

        loginPannel.SetActive(true);
        registerPannel.SetActive(false);

    }

    // Quit the game from the login pannel
    public void OnClickQuit()
    {
        Application.Quit();
    }

    // Create the Playfab account 
    public void OnClickCreate()
    {
        RegisterPlayFabUserRequest request = new RegisterPlayFabUserRequest
        {
            Username = registerUsernameIF.text,
            Email = registerEmailIF.text,
            Password = registerPasswordIF.text,
            RequireBothUsernameAndEmail = true,
        };

        PlayFabClientAPI.RegisterPlayFabUser(request, OnRegister, OnError);

    }

    public void OnRegister(RegisterPlayFabUserResult result)
    {

        Debug.Log(result);

    }

    public void OnClickLogin()
    {
        LoginWithPlayFabRequest request = new LoginWithPlayFabRequest
        {
            Username = loginUsernameIF.text,
            Password = loginPasswordIF.text

        };

        PlayFabClientAPI.LoginWithPlayFab(request, OnLogin, OnError);

    }

    public void OnLogin(LoginResult result)
    {
        Debug.Log(result.);
    }

    public void OnError(PlayFabError error)
    {

        Debug.Log(error);
    }

}
